{"name":"Whenner","tagline":"A simple promises implementation in Ruby.","body":"# Whenner [![Build Status](https://secure.travis-ci.org/avdgaag/whenner.png?branch=master)](http://travis-ci.org/avdgaag/whenner)\r\n\r\n## Introduction\r\n\r\nA promise represents the eventual result of an asynchronous operation. The\r\nprimary way of interacting with a promise is through its `done` and `fail`\r\nmethods, which registers callbacks to receive either a promiseâ€™s eventual value\r\nor the reason why the promise cannot be fulfilled.\r\n\r\n## Installation\r\n\r\nWhenner is distributed as a Ruby gem, which should be installed on most Macs and\r\nLinux systems. Once you have ensured you have a working installation of Ruby\r\nand Ruby gems, install the gem as follows from the command line:\r\n\r\n    $ gem install whenner\r\n\r\n## Usage\r\n\r\nWhenner provides two basic methods to use deferreds:\r\n\r\n* `Whenner.defer` to create a new deferred object and return its promise. In the\r\n  block to the method you can fulfill or reject the deferred.\r\n* `Whenner.when` to convert one or more arguments into promises, combining them\r\n  into a single new promise that you can attach callbacks to.\r\n\r\nDeferred objects can give you a promise that, at some point in the future, will\r\nresolve to either a fulfilled or rejected state. When that happens, appropriate\r\ncallbacks are called. You can attach such callbacks on a deferred or promise\r\nusing three methods:\r\n\r\n* `done` to register blocks to be called when the promise is fulfilled;\r\n* `fail` to register blocks to be called when the promise is rejected;\r\n* `always` to register blocks to be called when the promise is resolved (either\r\n  fulfilled or rejected);\r\n\r\nHere's an example of making three asynchronous HTTP requests, waiting for them\r\nall to finish and acting on their results:\r\n\r\n```ruby\r\n$:.unshift File.expand_path('../lib', __FILE__)\r\nrequire 'whenner'\r\nrequire 'uri'\r\nrequire 'net/http'\r\n\r\ninclude Whenner\r\n\r\ndef async_get(uri)\r\n  defer do |f|\r\n    thread = Thread.new do\r\n      response = Net::HTTP.get_response(URI(uri))\r\n      if response.code =~ /^2/\r\n        f.fulfill response.body\r\n      else\r\n        f.reject response.message\r\n      end\r\n    end\r\n    at_exit { thread.join }\r\n  end\r\nend\r\n\r\ncnn     = async_get('http://edition.cnn.com')\r\nnytimes = async_get('http://www.nytimes.com')\r\ngoogle  = async_get('http://www.google.nl')\r\n\r\nWhenner.when(cnn, google, nytimes).done do |results|\r\n  results.map { |str| str[/<title>(.+)<\\/title>/, 1] }\r\nend.done do |titles|\r\n  puts \"Success: #{titles.inspect}\"\r\nend\r\n```\r\n\r\nAs methods in Ruby can only take a single block, Whenner does not support a\r\n`then` method yet, that would combine the `done` and `fail` methods. This might\r\nbe implementing in the future using something like this:\r\n\r\n```ruby\r\ndefer { async_get('http://google.com') }.then do |on|\r\n  on.done { puts 'Success!' }\r\n  on.fail { puts 'Success!' }\r\nend\r\n```\r\n\r\n### Documentation\r\n\r\nSee the inline [API\r\ndocs](http://rubydoc.info/github/avdgaag/whenner/master/frames) for more\r\ninformation.\r\n\r\n## Other\r\n\r\n### Note on Patches/Pull Requests\r\n\r\n1. Fork the project.\r\n2. Make your feature addition or bug fix.\r\n3. Add tests for it. This is important so I don't break it in a future version\r\n   unintentionally.\r\n4. Commit, do not mess with rakefile, version, or history. (if you want to have\r\n   your own version, that is fine but bump version in a commit by itself I can\r\n   ignore when I pull)\r\n5. Send me a pull request. Bonus points for topic branches.\r\n\r\n### Issues\r\n\r\nPlease report any issues, defects or suggestions in the [Github issue\r\ntracker](https://github.com/avdgaag/whenner/issues).\r\n\r\n### What has changed?\r\n\r\nSee the [HISTORY](https://github.com/avdgaag/whenner/blob/master/HISTORY.md) file\r\nfor a detailed changelog.\r\n\r\n### Credits\r\n\r\nCreated by: Arjan van der Gaag  \r\nURL: [http://arjanvandergaag.nl](http://arjanvandergaag.nl)  \r\nProject homepage: [http://avdgaag.github.com/whenner](http://avdgaag.github.com/whenner)  \r\nDate: april 2012  \r\nLicense: [MIT-license](https://github.com/avdgaag/whenner/blob/master/LICENSE) (same as Ruby)\r\n","google":"UA-20357800-1","note":"Don't delete this file! It's used internally to help with page regeneration."}